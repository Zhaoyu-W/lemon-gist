DROP TABLE IF EXISTS star;
DROP TABLE IF EXISTS fork;
DROP TABLE IF EXISTS gist_comment;
DROP TABLE IF EXISTS gist;
DROP TABLE IF EXISTS gist_user;

CREATE TABLE gist_user
(
    user_id  SERIAL,               -- id generated by postgresql
    auth0_id TEXT NOT NULL UNIQUE, -- id generated by auth0
    picture TEXT NOT NULL,         -- picture url generated by auth0
    -- following columns are no longer needed since auth0 stores them
    -- name TEXT NOT NULL,
    -- email TEXT NOT NULL,
    -- password VARCHAR NOT NULL,
    -- signed_up TIMESTAMP NOT NULL,
    CONSTRAINT pk_user PRIMARY KEY (user_id)
);

CREATE TABLE gist
(
    gist_id       SERIAL,
    user_id       SERIAL      NOT NULL,
    gist_name     TEXT        NOT NULL,
    user_name     TEXT        NOT NULL,
    description   TEXT        NOT NULL,
    content       TEXT        NOT NULL,
    created       TIMESTAMP NOT NULL,
    last_modified TIMESTAMP NOT NULL,
    stars         INTEGER DEFAULT 0,
    forks         INTEGER DEFAULT 0,
    comments      INTEGER DEFAULT 0,
    is_forked     BOOLEAN DEFAULT false,
    forked_from   SERIAL,
    CONSTRAINT pk_gist PRIMARY KEY (gist_id),
    CONSTRAINT fk_user_id FOREIGN KEY (user_id) REFERENCES gist_user (user_id),
    CONSTRAINT fk_forked_from FOREIGN KEY (forked_from) REFERENCES gist (gist_id)
);

CREATE TABLE gist_comment
(
    comment_id   SERIAL,
    content      TEXT        NOT NULL,
    commented_at TIMESTAMP   NOT NULL,
    user_id      SERIAL      NOT NULL,
    gist_id      SERIAL      NOT NULL,
    CONSTRAINT pk_gist_comment PRIMARY KEY (comment_id),
    CONSTRAINT fk_user_id FOREIGN KEY (user_id) REFERENCES gist_user (user_id),
    CONSTRAINT fk_gist_id FOREIGN KEY (gist_id) REFERENCES gist (gist_id)
);

CREATE TABLE fork
(
    user_id SERIAL,
    gist_id SERIAL,
    CONSTRAINT pk_fork PRIMARY KEY (user_id, gist_id),
    CONSTRAINT fk_user_id FOREIGN KEY (user_id) REFERENCES gist_user (user_id),
    CONSTRAINT fk_gist_id FOREIGN KEY (gist_id) REFERENCES gist (gist_id)
);

CREATE TABLE star
(
    user_id SERIAL,
    gist_id SERIAL,
    CONSTRAINT pk_star PRIMARY KEY (user_id, gist_id),
    CONSTRAINT fk_user_id FOREIGN KEY (user_id) REFERENCES gist_user (user_id),
    CONSTRAINT fk_gist_id FOREIGN KEY (gist_id) REFERENCES gist (gist_id)
);